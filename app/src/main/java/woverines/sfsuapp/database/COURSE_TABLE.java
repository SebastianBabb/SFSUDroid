package woverines.sfsuapp.database;


import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;

import java.util.ArrayList;
import java.util.List;
/**
 * Created by andre_000 on 5/10/2016.
 *
 * based on Gary's ALERTS_TABLE
 */
public class COURSE_TABLE {

    public static final String TABLE_COURSE = "course";
    public static final String COLUMN_ID = "_id";
    public static final String COLUMN_NAME = "_name";
    public static final String COLUMN_NUMBER = "_number";
    public static final String COLUMN_SECTION = "_section";
    public static final String COLUMN_DEPARTMENT = "_department";
    public static final String COLUMN_INSTRUCTOR = "_instructor";
    public static final String COLUMN_MEET_TIME = "_meet_time";
    public static final String COLUMN_MEET_DAYS = "_meet_days";
    public static final String COLUMN_MEET_ROOM = "_meet_room";
    public static final String COLUMN_DESCRIPTION = "_description";

    public static final String CREATE_QUERY = "CREATE TABLE " +
            TABLE_COURSE +
            "(" +
            COLUMN_ID + " INTEGER PRIMARY KEY AUTOINCREMENT, " +
            COLUMN_NAME + " TEXT, " +
            COLUMN_NUMBER + " TEXT, " +
            COLUMN_SECTION + " TEXT, " +
            COLUMN_DEPARTMENT + " TEXT, " +
            COLUMN_INSTRUCTOR + " TEXT, " +
            COLUMN_MEET_TIME + " TEXT, " +
            COLUMN_MEET_DAYS + " TEXT, " +
            COLUMN_MEET_ROOM + " TEXT, " +
            COLUMN_DESCRIPTION + " TEXT" +
            ");";

    public static final String[] PROJECTION = new String[]{
            COLUMN_ID,
            COLUMN_NAME,
            COLUMN_NUMBER,
            COLUMN_SECTION,
            COLUMN_DEPARTMENT,
            COLUMN_INSTRUCTOR,
            COLUMN_MEET_TIME,
            COLUMN_MEET_DAYS,
            COLUMN_MEET_ROOM,
            COLUMN_DESCRIPTION
    };

    public static final int INDEX_ID = 0;
    public static final int INDEX_NAME = 1;
    public static final int INDEX_NUMBER = 2;
    public static final int INDEX_SECTION = 3;
    public static final int INDEX_DEPARTMENT = 4;
    public static final int INDEX_INSTRUCTOR = 5;
    public static final int INDEX_MEET_TIME = 6;
    public static final int INDEX_MEET_DAYS = 7;
    public static final int INDEX_MEET_ROOM = 8;
    public static final int INDEX_DESCRIPTION = 9;


    /**
     * Insert an course into database
     *
     * @param context contains Android context
     * @param course contains Course values
     * @return id
     */
    public static long addCourse(Context context, Course course) {
        long id;

        SQLiteDatabase database = new DBHandler(context).getWritableDatabase();

        ContentValues values = new ContentValues();
        values.put(COLUMN_NAME, course.getName());
        values.put(COLUMN_NUMBER, course.getNumber());
        values.put(COLUMN_SECTION, course.getSection());
        values.put(COLUMN_DEPARTMENT, course.getDepartment());
        values.put(COLUMN_INSTRUCTOR, course.getInstructor());
        values.put(COLUMN_MEET_TIME, course.getMeetTime());
        values.put(COLUMN_MEET_DAYS, course.getMeetDays());
        values.put(COLUMN_MEET_ROOM, course.getMeetRoom());
        values.put(COLUMN_DESCRIPTION, course.getDescription());

        id = database.insert(TABLE_COURSE, null, values);

        database.close();

        return id;
    }


    public static ArrayList<Course> getCourses(Context context, String user) {

        ArrayList<Course> courses = new ArrayList<>();

        SQLiteDatabase database = new DBHandler(context).getWritableDatabase();

        Cursor cursor = database.query(
                TABLE_COURSE,
                PROJECTION,
                COLUMN_ID + " >= ?",
                new String[]{
                        String.valueOf(user)
                },
                null,
                null,
                COLUMN_ID + " DESC"
        );

        while (cursor.moveToNext()) {
            Course course = cursorToCourse(cursor);
            courses.add(course);
        }

        cursor.close();
        database.close();

        return courses;
    }

    public static void resetTable(Context context){
        SQLiteDatabase database = new DBHandler(context).getWritableDatabase();

        database.execSQL("DELETE FROM "  + TABLE_COURSE);
    }


    /**
     * Instantiates an course from the given cursor generated by a specific projection
     *
     * @param cursor contains the cursor to the results
     * @return course
     */
    private static Course cursorToCourse(Cursor cursor) {
        return new Course(
            cursor.getInt(INDEX_ID),
            cursor.getString(INDEX_DEPARTMENT),
            cursor.getString(INDEX_NUMBER),
            cursor.getString(INDEX_SECTION),
            cursor.getString(INDEX_NAME),
            cursor.getString(INDEX_MEET_DAYS),
            cursor.getString(INDEX_MEET_TIME),
            cursor.getString(INDEX_MEET_ROOM),
            cursor.getString(INDEX_INSTRUCTOR),
            cursor.getString(INDEX_DESCRIPTION)
            );
    }
}
